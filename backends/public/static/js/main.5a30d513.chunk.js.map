{"version":3,"sources":["components/Video/styles.module.scss","components/Player/styles.module.scss","components/CurrentPlayer/styles.module.scss","serviceWorker.ts","pages/WhatAmI/store/types.ts","pages/WhatAmI/store/actions.ts","services/Api/index.ts","services/PeerConnection/index.ts","services/Quest/index.ts","pages/WhatAmI/store/reducer.ts","pages/WhatAmI/store/selectors.ts","store/reducer.ts","pages/WhatAmI/saga/index.ts","saga/sagas.ts","saga/index.ts","components/Icon/index.tsx","components/Video/index.tsx","components/Player/index.tsx","components/CurrentPlayer/index.tsx","components/Layout/index.tsx","pages/Index/index.tsx","pages/NotFound/index.tsx","pages/WhatAmI/index.tsx","pages/About/index.tsx","App.tsx","index.tsx","store/create.ts"],"names":["module","exports","Boolean","window","location","hostname","match","CHANGE_CURRENT_PLAYER","JOINED","SET_QUEST","nextPlayer","type","Api","axiosInstance","id","namespace","this","axios","create","baseURL","process","headers","saga","bind","take","payload","ns","call","eventChannel","emitter","source","EventSource","onmessage","data","msg","JSON","parse","e","console","error","onerror","readyState","CLOSED","END","close","channel","put","message","from","request","url","method","stringify","instance","MessagesTypes","AllowedMessagesTypes","ANSWER","NEW_ICE_CANDIDATE","OFFER","PeerConnection","localId","remoteId","pc","started","RTCPeerConnection","iceServers","urls","onicecandidate","onICECandidate","oniceconnectionstatechange","onICEConnectionStateChange","onconnectionstatechange","onConnectionStateChange","ontrack","onTrack","some","t","peerConnection","Array","connections","values","filter","p","warn","onNewICECandidate","onOffer","onAnswer","description","setRemoteDescription","candidate","addIceCandidate","signalingState","setLocalDescription","createAnswer","getInstance","send","to","localDescription","startConnection","iceConnectionState","connectionState","streams","_dispatch","stream","getLocalStream","localStream","getTracks","forEach","addTrack","createOffer","noDispatch","onnegotiationneeded","delete","_localStream","constrains","audio","video","aspectRatio","navigator","mediaDevices","getUserMedia","Error","dispatch","has","set","takeEvery","onApiMessage","Map","Quest","list","animals","Math","floor","random","length","ACTION_HANDLERS","state","_action","currentPlayerId","myId","players","playersList","sort","a","b","join","playerIdx","findIndex","size","get","connection","timestamp","isLocal","action","player","undefined","quest","initialState","gameRoom","localPlayer","createSelector","gr","imHostPlayer","currentPlayer","nextTurn","currentPlayerIndex","rootReducer","combineReducers","handler","changeCurrentPlayer","setQuest","onMessage","onNextPlayer","select","isPlayer","joinPayload","getQuest","getConnection","me","current","f","whatAmISaga","rootSaga","all","sagas","map","spawn","config","autoAddCss","library","add","faArrowAltCircleRight","faDice","faHeartBroken","faHome","faVideoSlash","Icon","props","Video","className","styles","videoContainer","ref","srcObject","oncanplay","play","icon","inverse","children","YourPlayer","yourPlayer","PlayerDisplay","showQuest","playerContainer","Controls","controls","onClick","CurrentPlayer","imHost","Layout","fullHeight","href","withRouter","history","uuidv4","push","NotFound","GameRoom","connect","params","slice","key","React","PureComponent","bindActionCreators","About","App","exact","path","WhatAmI","store","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","reduxCreateStore","applyMiddleware","run","setDispatch","createStore","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5a30d513.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoContainer\":\"styles_videoContainer__2P6Cb\",\"video\":\"styles_video__JhhYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerContainer\":\"styles_playerContainer__1G9Dq\",\"quest\":\"styles_quest__2Rn7S\",\"yourPlayer\":\"styles_yourPlayer__2KnbU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"styles_controls__jZk8F\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Action } from 'redux';\n\nimport { PeerConnection } from '../../../services';\n\nexport interface Player {\n  connection?: PeerConnection;\n  id: string;\n  isLocal: boolean;\n  join: number; // when the player joins the room\n  quest?: string;\n  stream?: MediaStream;\n}\n\nexport interface GameRoomState {\n  currentPlayerId: string;\n  myId: string;\n  namespace: string;\n  players: Map<string, Player>;\n}\n\nexport const CHANGE_CURRENT_PLAYER = 'WHATAMI_CHANGE_CURRENT_PLAYER';\nexport const JOINED = 'WHATAMI_JOINED';\nexport const GONE = 'WHATAMI_GONE';\nexport const NEXT_PLAYER = 'WHATAMI_NEXT_PLAYER';\nexport const SET_QUEST = 'WHATAMI_SET_QUEST';\n\nexport interface ChangeCurrentPlayerAction extends Action<typeof CHANGE_CURRENT_PLAYER> {\n  payload: { id: string; };\n}\n\nexport interface JoinedAction extends Action<typeof JOINED> {\n  payload: {\n    id: string;\n    peerConnection?: PeerConnection;\n    timestamp: number;\n  };\n}\n\nexport interface GoneAction extends Action<typeof GONE> {\n  payload: { id: string; };\n}\n\nexport interface NextPlayerAction extends Action<typeof NEXT_PLAYER> {}\n\nexport interface SetQuestAction extends Action<typeof SET_QUEST> {\n  payload: {\n    id: string;\n    quest: string;\n  };\n}\n\nexport type GameRoomAction = ChangeCurrentPlayerAction\n  | JoinedAction\n  | GoneAction\n  | NextPlayerAction\n  | SetQuestAction;\n","import { JOINED, NEXT_PLAYER } from './types';\n\nexport const joined = (id: string) => ({\n  type: JOINED,\n  payload: { id },\n});\n\nexport const nextPlayer = () => ({ type: NEXT_PLAYER });","import axios, { AxiosInstance } from 'axios';\nimport { Action } from 'redux';\nimport { eventChannel, END } from 'redux-saga';\nimport { call, put, take } from 'redux-saga/effects';\n\nexport const CONNECT = 'API_CONNECT';\nexport const INCOMING_MESSAGE = 'API_INCOMING_MESSAGE';\n\nexport interface ConnectAction extends Action<typeof CONNECT> {\n  payload: {\n    id: string;\n    namespace: string;\n  }\n}\nexport interface IncomingMessageAction extends Action<typeof INCOMING_MESSAGE> {\n  payload: { msg: Message };\n}\n\nexport interface Message {\n  from?: string;\n  namespace?: string;\n  payload?: any;\n  to?: string;\n  type: string;\n}\n\nexport class Api {\n  private static instance: Api | null = null;\n\n  private axiosInstance: AxiosInstance;\n  private id: string = '';\n  private namespace: string = '';\n\n  private constructor() {\n    this.axiosInstance = axios.create({\n      baseURL: process.env.REACT_APP_API_HOST,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    this.saga = this.saga.bind(this);\n  }\n\n  static getInstance() {\n    if (!this.instance) this.instance = new Api();\n    return this.instance;\n  }\n\n  * saga() {\n    const { payload: { id, namespace: ns } }: ConnectAction = yield take(CONNECT);\n\n    this.id = id;\n    this.namespace = ns;\n\n    const channel = yield call(() => eventChannel((emitter) => {\n      const source = new EventSource(`${process.env.REACT_APP_API_EVENTS}?id=${id}&ns=${ns}`);\n      \n      source.onmessage = ({ data }: MessageEvent) => {\n        try {\n          const msg: Message = JSON.parse(data);\n          emitter(msg);\n        } catch (e) {\n          console.error(e);\n        }\n      };\n\n      source.onerror = () => {\n        if (source.readyState === EventSource.CLOSED) {\n          emitter(END)\n        }\n      };\n\n      return () => source.close();\n    }));\n\n    try {\n      while (true) {\n        const msg = yield take(channel);\n        yield put<IncomingMessageAction>({\n          type: INCOMING_MESSAGE,\n          payload: { msg },\n        });\n      }\n    } catch (e) { console.error(e); }\n  }\n\n  connect(id: string, namespace: string) {\n    return {\n      type: CONNECT,\n      payload: { id, namespace },\n    };\n  }\n\n  async send(msg: Message) {\n    try {\n      const message: Message = { ...msg, from: this.id };\n      await this.axiosInstance.request({\n        url: '/',\n        method: 'POST',\n        data: JSON.stringify({\n          ...message,\n          ns: this.namespace,\n        }),\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n","import { Action, Dispatch } from 'redux';\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { Api, IncomingMessageAction, INCOMING_MESSAGE } from '../Api';\n\nexport const LOCALSTREAM_AVAILABLE = 'LOCALSTREAM_AVAILABLE';\nexport const REMOTESTREAM_AVAILABLE = 'REMOTESTREAM_AVAILABLE';\nexport const REMOTESTREAM_UNAVAILABLE = 'REMOTESTREAM_UNAVAILABLE';\n\nexport interface LocalStreamAvailableAction\n  extends Action<typeof LOCALSTREAM_AVAILABLE> {\n    payload: { stream: MediaStream };\n  }\nexport interface RemoteStreamAvailableAction\n  extends Action<typeof REMOTESTREAM_AVAILABLE> {\n    payload: { id: string; stream: MediaStream };\n  }\nexport interface RemoteStreamUnavailableAction\n  extends Action<typeof REMOTESTREAM_UNAVAILABLE> {\n    payload: { id: string };\n  }\n\nexport enum MessagesTypes {\n  ANSWER = 'rtc:answer',\n  NEW_ICE_CANDIDATE = 'rtc:newICECandidate',\n  OFFER = 'rtc:offer',\n}\nexport const AllowedMessagesTypes = [\n  MessagesTypes.ANSWER,\n  MessagesTypes.NEW_ICE_CANDIDATE,\n  MessagesTypes.OFFER,\n]\n\nexport class PeerConnection {\n  private static _localStream: MediaStream | null = null;\n  private static _dispatch: Dispatch;\n  private static connections: Map<string, PeerConnection> = new Map();\n\n  private localId: string;\n  private pc: RTCPeerConnection;\n  private remoteId: string;\n  private started: boolean = false;\n\n  private static * onApiMessage({ payload: { msg } }: IncomingMessageAction) {\n    if (!AllowedMessagesTypes.some(t => msg.type === t)) return;\n\n    const { from, payload, type } = msg;\n    const peerConnection = Array.from(PeerConnection.connections.values())\n      .filter(p => p.remoteId === from)[0];\n    if (!peerConnection) {\n      console.warn(`Player ${from} is sending a message of type ${type} and has no peer connection.`);\n      return;\n    }\n\n    if (type === MessagesTypes.NEW_ICE_CANDIDATE)\n      yield PeerConnection.onNewICECandidate(peerConnection, payload);\n    \n    if (type === MessagesTypes.OFFER)\n      yield PeerConnection.onOffer(peerConnection, from!, payload);\n    \n    if (type === MessagesTypes.ANSWER)\n      yield PeerConnection.onAnswer(peerConnection, payload);\n  }\n\n  private static * onAnswer(pc: PeerConnection, payload: any) {\n    try {\n      const { description } = payload;\n      yield pc.pc.setRemoteDescription(description);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  private static * onNewICECandidate(pc: PeerConnection, payload: any) {\n    try {\n      const { candidate } = payload;\n      yield pc.pc.addIceCandidate(candidate);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  private static * onOffer(pc: PeerConnection, from: string, payload: any) {\n    try {\n      const { description } = payload;\n      if (pc.pc.signalingState !== 'stable') {\n        yield pc.pc.setLocalDescription({ type: 'rollback' });\n      }\n      yield pc.pc.setRemoteDescription(description);\n\n      yield pc.pc.setLocalDescription(yield pc.pc.createAnswer());\n      yield Api.getInstance().send({\n        type: MessagesTypes.ANSWER,\n        to: from,\n        payload: { description: pc.pc.localDescription },\n      });\n\n      yield pc.startConnection();\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  private constructor(localId: string, remoteId: string) {\n    this.localId = localId;\n    this.remoteId = remoteId;\n\n    this.pc = new RTCPeerConnection({\n      iceServers: [{\n        urls: ['stun:stun.l.google.com:19302', 'stun:stun3.l.google.com:19302'],\n      }],\n    });\n\n    this.pc.onicecandidate = this.onICECandidate.bind(this);\n    this.pc.oniceconnectionstatechange = this.onICEConnectionStateChange.bind(this);\n    this.pc.onconnectionstatechange = this.onConnectionStateChange.bind(this);\n    this.pc.ontrack = this.onTrack.bind(this);\n  }\n\n  private async onICECandidate({ candidate }: RTCPeerConnectionIceEvent) {\n    if (candidate) {\n      await Api.getInstance().send({\n        type: MessagesTypes.NEW_ICE_CANDIDATE,\n        to: this.remoteId,\n        payload: { candidate },\n      });\n    }\n  }\n\n  private onICEConnectionStateChange() {\n    switch (this.pc.iceConnectionState) {\n      case 'closed':\n      case 'failed':\n      case 'disconnected':\n        this.close();\n        break;\n    }\n  }\n\n  private onConnectionStateChange() {\n    switch (this.pc.connectionState) {\n      case 'closed':\n        this.close();\n        break;\n    }\n  }\n\n  private onTrack({ streams }: RTCTrackEvent) {\n    PeerConnection._dispatch({\n      type: REMOTESTREAM_AVAILABLE,\n      payload: { id: this.remoteId, stream: streams[0] },\n    });\n  }\n\n  public static * getLocalStream() {\n    if (!this._localStream) {\n      try {\n        const constrains: MediaStreamConstraints = {\n          audio: true,\n          video: { aspectRatio: 1 },\n        };\n        this._localStream = yield navigator.mediaDevices.getUserMedia(constrains);\n        if (this._localStream) {\n          yield put<LocalStreamAvailableAction>({\n            type: LOCALSTREAM_AVAILABLE,\n            payload: { stream: this._localStream },\n          });\n        } else {\n          throw new Error('No local stream available');\n        }\n      } catch (e) {\n        console.error(e);\n        this._localStream = null;\n      }\n    }\n\n    return this._localStream;\n  }\n\n  public static setDispatch(dispatch: Dispatch) {\n    this._dispatch = dispatch;\n  }\n\n  public static getConnection(localId: string, remoteId: string) {\n    const peerConnection = new PeerConnection(localId, remoteId);\n    if (!this.connections.has(remoteId)) {\n      this.connections.set(remoteId, peerConnection);\n    }\n    return peerConnection;\n  }\n\n  public static * saga() {\n    yield takeEvery(INCOMING_MESSAGE, PeerConnection.onApiMessage);\n  }\n\n  public * startConnection() {\n    if (this.started) return;\n\n    const localStream: MediaStream = yield PeerConnection.getLocalStream();\n    localStream.getTracks()\n      .forEach(t => this.pc.addTrack(t, localStream));\n\n    if (this.pc.signalingState !== 'stable') {\n      yield this.pc.setLocalDescription({ type: 'rollback' });\n    }\n\n    yield this.pc.setLocalDescription(yield this.pc.createOffer());\n    yield Api.getInstance().send({\n      type: MessagesTypes.OFFER,\n      to: this.remoteId,\n      payload: { description: this.pc.localDescription },\n    });\n    this.started = true;\n  }\n\n  public close(noDispatch: boolean = false) {\n    this.pc.onicecandidate = null;\n    this.pc.oniceconnectionstatechange = null;\n    this.pc.onnegotiationneeded = null;\n    this.pc.onconnectionstatechange = null;\n    this.pc.ontrack = null;\n    this.pc.close();\n\n    if (!noDispatch) {\n      PeerConnection._dispatch({\n        type: REMOTESTREAM_UNAVAILABLE,\n        payload: { id: this.remoteId },\n      });\n    }\n    PeerConnection.connections.delete(this.remoteId);\n  }\n}","import animals from './animals.json';\n\nfunction getRandomItem(list: any[]){\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nexport class Quest {\n  public static getQuest() {\n    return getRandomItem(animals)[\"es\"];\n  }\n}","import { AnyAction } from 'redux';\n\nimport {\n  ConnectAction,\n  LocalStreamAvailableAction,\n  RemoteStreamAvailableAction,\n  CONNECT,\n  LOCALSTREAM_AVAILABLE,\n  REMOTESTREAM_AVAILABLE,\n  REMOTESTREAM_UNAVAILABLE,\n  RemoteStreamUnavailableAction,\n} from '../../../services'\n\nimport {\n  ChangeCurrentPlayerAction,\n  GameRoomState,\n  GoneAction,\n  JoinedAction,\n  SetQuestAction,\n  CHANGE_CURRENT_PLAYER,\n  GONE,\n  JOINED,\n  SET_QUEST,\n} from './types';\n\ninterface ActionHandler {\n  [action: string]: (state: GameRoomState, action: AnyAction) => GameRoomState;\n}\n\nconst ACTION_HANDLERS: ActionHandler = {\n  [CHANGE_CURRENT_PLAYER]: (state, _action) => {\n    const action = _action as ChangeCurrentPlayerAction;\n    const { payload: { id: currentPlayerId } } = action;\n    \n    return {\n      ...state,\n      currentPlayerId,\n    };\n  },\n  [CONNECT]: (state, _action) => {\n    const action = _action as ConnectAction;\n    const { payload: { id: myId, namespace } } = action;\n    \n    return {\n      ...state,\n      currentPlayerId: myId,\n      myId,\n      namespace,\n    }\n  },\n  [GONE]: (state, _action) => {\n    const action = _action as GoneAction;\n    const { payload: { id } } = action;\n    const { players } = state;\n\n    let currentPlayerId = state.currentPlayerId;\n    if (state.currentPlayerId === id) {\n      const playersList = Array.from(state.players.values())\n        .sort((a, b) => a.join - b.join);\n      let playerIdx = playersList.findIndex(p => p.id === id);\n      if ((playerIdx + 1) >= players.size) playerIdx = -1;\n      currentPlayerId = playersList[playerIdx + 1].id;\n    }\n\n    players.get(id)?.connection?.close(true);\n    players.delete(id);\n\n    return {\n      ...state,\n      currentPlayerId,\n      players,\n    };\n  },\n  [JOINED]: (state, _action) => {\n    const action = _action as JoinedAction;\n    const { payload: { id, peerConnection: connection, timestamp: join } } = action;\n    const { players } = state;\n    if (!players.has(id)) {\n      players.set(id, { id, connection, join, isLocal: !Boolean(connection) });\n    }\n\n    return {\n      ...state,\n      players,\n    };\n  },\n  [LOCALSTREAM_AVAILABLE]: (state, _action) => {\n    const action = _action as LocalStreamAvailableAction;\n    const player = state.players.get(state.myId);\n    if (player) {\n      player.stream = action.payload.stream;\n      state.players.delete(state.myId);\n      state.players.set(state.myId, { ...player });\n    }\n\n    return { ...state };\n  },\n  [REMOTESTREAM_AVAILABLE]: (state, _action) => {\n    const action = _action as RemoteStreamAvailableAction;\n    const { id, stream } = action.payload;\n    const player = state.players.get(id);\n    if (player) {\n      player.stream = stream;\n      state.players.delete(id);\n      state.players.set(id, { ...player });\n    }\n\n    return { ...state };\n  },\n  [REMOTESTREAM_UNAVAILABLE]: (state, _action) => {\n    const action = _action as RemoteStreamUnavailableAction;\n    const { payload: { id } } = action;\n    const player = state.players.get(id);\n    if (player) {\n      player.stream = undefined;\n      state.players.delete(id);\n      state.players.set(id, { ...player });\n    }\n\n    return { ...state };\n  },\n  [SET_QUEST]: (state, _action) => {\n    const action = _action as SetQuestAction;\n    const { payload: { id, quest } } = action;\n    const player = state.players.get(id);\n\n    if (player) {\n      player.quest = quest;\n      state.players.delete(id);\n      state.players.set(id, { ...player });\n    }\n\n    return { ...state };\n  },\n};\n\nconst initialState: GameRoomState = {\n  currentPlayerId: '',\n  myId: '',\n  namespace: '',\n  players: new Map(),\n};\n\nexport const reducer = (\n  state: GameRoomState = initialState,\n  action: AnyAction,\n) => {\n  const handler = ACTION_HANDLERS[action.type];\n  return handler ? handler(state, action) : state;\n};\n","import { createSelector } from 'reselect';\n\nimport { GameRoomState } from './types';\n\nexport const gameRoom = (state: any) => state.gameRoom as GameRoomState;\nexport const myId = createSelector([gameRoom], gr => gr.myId);\nexport const namespace = createSelector([gameRoom], gr => gr.namespace);\nexport const localPlayer = createSelector([gameRoom], gr => gr.players.get(gr.myId));\nexport const imHostPlayer = createSelector(\n  [gameRoom],\n  gr => Array.from(gr.players.values())\n    .sort((a, b) => a.join - b.join)[0]?.id === gr.myId,\n);\nexport const currentPlayer = createSelector([gameRoom], gr => gr.players.get(gr.currentPlayerId));\nexport const players = createSelector(\n  [gameRoom],\n  gr => Array.from(gr.players.values())\n    .sort((a, b) => a.join - b.join)\n    .filter(p => p.id !== gr.currentPlayerId),\n);\nexport const nextTurn = createSelector(\n  [gameRoom, currentPlayer],\n  (gr, currentPlayer) => {\n    const players = Array.from(gr.players.values())\n      .sort((a, b) => a.join - b.join);\n    const currentPlayerIndex = players.findIndex(p => currentPlayer?.id === p.id);\n    const nextPlayerIndex = (currentPlayerIndex === (gr.players.size - 1) ? -1 : currentPlayerIndex) + 1;\n    return players[nextPlayerIndex];\n  },\n);\n","import {combineReducers} from 'redux';\n\nimport { reducer as gameRoomReducer } from '../pages/WhatAmI/store';\n\nexport const rootReducer = combineReducers({\n    gameRoom: gameRoomReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { put, select, takeEvery } from 'redux-saga/effects';\n\nimport {\n  Api,\n  IncomingMessageAction,\n  PeerConnection,\n  Quest,\n  INCOMING_MESSAGE,\n} from '../../../services';\n\nimport {\n  currentPlayer,\n  gameRoom,\n  imHostPlayer,\n  localPlayer,\n  nextTurn,\n  players,\n  GameRoomState,\n  ChangeCurrentPlayerAction,\n  GoneAction,\n  JoinedAction,\n  Player,\n  SetQuestAction,\n  CHANGE_CURRENT_PLAYER,\n  GONE,\n  JOINED,\n  NEXT_PLAYER,\n  SET_QUEST,\n} from '../store';\n\n// Should occurs when some player enters in the room\nfunction* join(from: string, payload: any, type: string, to?: string) {\n  const state: GameRoomState = yield select(gameRoom);\n  const isPlayer = state.players.has(from!);\n\n  if (type === 'join' && !isPlayer) {\n    const { timestamp } = payload;\n    const joinPayload: any = { id: from!, timestamp };\n    let peerConnection: PeerConnection | null = null;\n\n    if (from === state.myId) { // my own joining\n      yield put<JoinedAction>({ type: JOINED, payload: joinPayload });\n      yield PeerConnection.getLocalStream();\n      yield put<SetQuestAction>({\n        type: SET_QUEST,\n        payload: { id: from, quest: Quest.getQuest() },\n      });\n      return;\n    }\n\n    peerConnection = PeerConnection.getConnection(state.myId, from!);\n    joinPayload.peerConnection = peerConnection;\n    yield put<JoinedAction>({ type: JOINED, payload: joinPayload });\n\n    if (to !== state.myId) { // newer player is joining\n      const me: Player = yield select(localPlayer);\n      yield Api.getInstance().send({\n        type: 'join',\n        to: from,\n        payload: { timestamp: me.join },\n      });\n      yield peerConnection.startConnection();\n\n      const imHost = yield select(imHostPlayer);\n      if (imHost) {\n        yield Api.getInstance().send({\n          type: CHANGE_CURRENT_PLAYER,\n          payload: { id: state.currentPlayerId },\n        });\n        const quest = Quest.getQuest();\n        yield put<SetQuestAction>({\n          type: SET_QUEST,\n          payload: { id: from, quest },\n        });\n        const current = yield select(currentPlayer);\n        yield Api.getInstance().send({\n          type: SET_QUEST,\n          payload: { id: current.id, quest: current.quest },\n        });\n        for (const player of yield select(players)) {\n          yield Api.getInstance().send({\n            type: SET_QUEST,\n            payload: { id: player.id, quest: player.quest },\n          });\n        }\n      }\n    }\n  } else if (type === 'gone') {\n    yield put<GoneAction>({ type: GONE, payload: { id: from! } });\n  }\n}\n\nfunction* changeCurrentPlayer(payload: any) {\n  const { id } = payload;\n  const imHost = yield select(imHostPlayer);\n\n  if (!imHost) {\n    yield put<ChangeCurrentPlayerAction>({\n      type: CHANGE_CURRENT_PLAYER,\n      payload: { id },\n    });\n  }\n}\n\nfunction *setQuest(payload: any) {\n  const { id, quest } = payload;\n  yield put<SetQuestAction>({\n    type: SET_QUEST,\n    payload: { id, quest },\n  });\n}\n\nfunction* onMessage({ payload: { msg: { from, payload, to, type } } }: IncomingMessageAction) {\n  if (['join', 'gone'].some(t => type === t)) yield join(from!, payload, type, to);\n  if (type === CHANGE_CURRENT_PLAYER) yield changeCurrentPlayer(payload);\n  if (type === SET_QUEST) yield setQuest(payload);\n}\n\nfunction* onNextPlayer() {\n  const imHost = yield select(imHostPlayer);\n  if (imHost) {\n    const nextPlayer: Player = yield select(nextTurn);\n    yield put<ChangeCurrentPlayerAction>({\n      type: CHANGE_CURRENT_PLAYER,\n      payload: { id: nextPlayer.id },\n    });\n    const current: Player = yield select(currentPlayer);\n    yield Api.getInstance().send({\n      type: CHANGE_CURRENT_PLAYER,\n      payload: { id: current.id },\n    });\n  }}\n\nexport function* saga() {\n  yield takeEvery(INCOMING_MESSAGE, onMessage);\n  yield takeEvery(NEXT_PLAYER, onNextPlayer);\n}\n","import { saga as whatAmISaga } from '../pages/WhatAmI/saga';\nimport { Api, PeerConnection } from '../services';\n\nexport default [\n  Api.getInstance().saga,\n  PeerConnection.saga,\n\n  whatAmISaga,\n];\n","import { all, call, spawn } from 'redux-saga/effects';\n\nimport sagas from './sagas';\n\nexport function* rootSaga () {\n  yield all(sagas.map((saga: any) =>\n    spawn(function* () {\n      while (true) {\n        try {\n          yield call(saga);\n          break;\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    })\n  ));\n};\n","import { config, library } from '@fortawesome/fontawesome-svg-core';\nimport '@fortawesome/fontawesome-svg-core/styles.css';\nimport {\n  faArrowAltCircleRight,\n  faDice,\n  faHeartBroken,\n  faHome,\n  faVideoSlash,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon, FontAwesomeIconProps } from '@fortawesome/react-fontawesome'\nimport React from 'react';\n\nconfig.autoAddCss = false\nlibrary.add(faArrowAltCircleRight, faDice, faHeartBroken, faHome, faVideoSlash);\n\nexport type ICONS = 'arrow-alt-circle-right' | 'dice' | 'heart-broken' | 'home' | 'video-slash';\n\ninterface IconProps extends FontAwesomeIconProps {\n  icon: ICONS;\n}\n\nexport const Icon: React.SFC<IconProps> = props => (\n  <FontAwesomeIcon {...props} />\n);\n","import React from 'react';\n\nimport { Icon } from '../Icon'\n\nimport styles from './styles.module.scss';\n\ninterface VideoProps\n  extends React.DetailedHTMLProps<React.VideoHTMLAttributes<HTMLVideoElement>, HTMLVideoElement> {\n    stream?: MediaStream;\n  }\nexport const Video: React.SFC<VideoProps> = ({ stream }) => {\n  if (!stream) {\n    return (\n      <div className={styles.videoContainer}>\n        <Icon icon=\"video-slash\" size=\"3x\" inverse />\n      </div>\n    );\n  }\n  \n  return (\n    <div className={styles.videoContainer}>\n      <video className={`video ${styles.video}`} ref={(video) => {\n        if (video) {\n          video.srcObject = stream;\n          video.oncanplay = () => video.play();\n          video.onerror = (e) => console.error(e);\n        }\n      }} />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Icon } from '../Icon';\nimport { Player } from '../../pages/WhatAmI/store';\nimport { Video } from '../Video';\n\nimport styles from './styles.module.scss';\n\ninterface PlayerDisplayProps {\n  className?: string;\n  player?: Player;\n  showQuest?: boolean;\n}\n\nconst Quest: React.SFC<any> = ({ children }) => (\n  <span className={styles.quest}>{children}</span>\n);\n\nconst YourPlayer: React.SFC<any> = () => (\n  <div className={styles.yourPlayer}>\n    <Icon icon=\"dice\" size=\"3x\" />\n  </div>\n);\n\nexport const PlayerDisplay: React.SFC<PlayerDisplayProps> = ({\n  children,\n  className,\n  player,\n  showQuest,\n}) => {\n  if (!player) return null;\n\n  const { isLocal } = player;\n\n  return (\n    <div className={`${className} ${styles.playerContainer}`}>\n      {isLocal && <YourPlayer />}\n      {!isLocal && showQuest && <Quest>{player.quest}</Quest>}\n      <Video stream={player.stream} />\n      {children}\n    </div>\n  );\n};\n\n","import React from 'react';\n\nimport { Player } from '../../pages/WhatAmI/store';\nimport { Icon } from '../Icon';\nimport { PlayerDisplay } from '../Player';\n\nimport styles from './styles.module.scss';\n\ninterface CurrentPlayerProps {\n  imHost: boolean;\n  nextPlayer: () => void;\n  player?: Player;\n}\n\nconst Controls: React.SFC<any> = ({ nextPlayer }) => {\n  return (\n    <div className={styles.controls}>\n      <Icon\n        icon=\"arrow-alt-circle-right\"\n        inverse\n        onClick={() => nextPlayer()}\n        size=\"3x\"\n      />\n    </div>\n  );\n};\n\nexport const CurrentPlayer: React.SFC<CurrentPlayerProps> = ({\n  imHost,\n  nextPlayer,\n  player\n}) => {\n  if (!player) return null;\n\n  return (\n    <PlayerDisplay\n      className=\"currentPlayerContainer\"\n      player={player}\n      showQuest\n    >\n      {imHost && <Controls nextPlayer={nextPlayer} />}\n    </PlayerDisplay>\n  );\n};\n\n","import React from 'react';\n\nimport './styles.scss';\n\ninterface LayoutProps {\n  fullHeight?: boolean;\n}\n\nexport const Layout: React.SFC<LayoutProps> = ({ fullHeight, children }) => (\n  <div className={`main-layout${fullHeight ? ' full-height' : ''}`}>\n    {children}\n    <footer>\n      <div className=\"container is-fluid\">\n        <a href=\"/about\" className=\"has-text-light is-size-7\">\n          ¿Cómo funciona esto?\n        </a>\n      </div>\n    </footer>\n  </div>\n)\n","import React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Layout } from '../../components';\nimport './styles.scss';\n\nconst Index: React.SFC<RouteComponentProps> = ({ history }) => {\n  const onCreate = () => {\n    const namespace = uuidv4();\n    history.push(`/what-am-i/${namespace}`);\n  };\n\n  return (\n    <Layout>\n      <div className=\"hero is-dark is-medium index-container\">\n        <div className=\"hero-body\">\n          <div className=\"container is-fluid\">\n            <div className=\"columns is-vcentered\">\n              <div className=\"column\">\n                <div className=\"content\">\n                  <h1 className=\"title is-size-1\">¿Qué / Quién Soy?</h1>\n                  <h2 className=\"subtitle\">\n                    <p>Pregunta hasta que adivines qué o quién eres</p>\n                    <p>Pierde el último que adivine</p>\n                  </h2>\n                </div>\n              </div>\n            \n              <div className=\"column\">\n                <div className=\"content\">\n                  <h1 className=\"title is-spaced\">\n                    Crear una nueva sala de juego\n                  </h1>\n                  <button\n                    className=\"button is-light is-large\"\n                    onClick={onCreate}\n                  >\n                    Crear\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default withRouter(Index);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Icon, Layout } from '../../components';\nimport './styles.scss';\n\nconst NotFound: React.SFC = () => (\n  <Layout>\n    <div className=\"not-found\">\n      <div className=\"hero is-dark\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <Icon icon=\"heart-broken\" size=\"5x\" />\n          </div>\n          <div className=\"container\">\n            <h1 className=\"title\">404</h1>\n            <h2 className=\"subtitle\">Not Found</h2>\n          </div>\n          <div className=\"container go-home\">\n            <Link to=\"/\">\n              <Icon icon=\"home\" size=\"lg\" />\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Layout>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Api } from '../../services';\nimport { CurrentPlayer, Layout, PlayerDisplay as Player } from '../../components';\nimport { RootState } from '../../store';\n\nimport {\n  currentPlayer,\n  imHostPlayer,\n  localPlayer,\n  nextPlayer,\n  players,\n} from './store';\n\nimport './styles.scss';\n\ninterface Params {\n  namespace: string;\n}\ntype GameRoomProps = ReturnType<typeof mapDispatchToProps> &\n  ReturnType<typeof mapStateToProps> &\n  RouteComponentProps<Params>;\ninterface GameRoomState {\n  id: string;\n}\n\nclass GameRoom extends React.PureComponent<GameRoomProps, GameRoomState> {\n  constructor(props: GameRoomProps) {\n    super(props);\n    this.state = { id: uuidv4() };\n  }\n\n  async componentDidMount() {\n    const { connect, match: { params: { namespace } } } = this.props;\n    const { id } = this.state;\n    connect(id, namespace);\n  }\n\n  render() {\n    const { currentPlayer, imHost, nextPlayer, players } = this.props;\n\n    return (\n      <Layout fullHeight>\n        <div className=\"room\">\n          <div className=\"game\">\n            <div className=\"mainPlayersContainer\">\n              <CurrentPlayer\n                imHost={imHost}\n                nextPlayer={nextPlayer}\n                player={currentPlayer}\n              />\n              <div className=\"players\">\n                {players.slice(0, 2).map(p =>\n                  <Player className=\"playerContainer\" key={p.id} player={p} />)}\n              </div>\n            </div>\n            <div className=\"secondaryPlayersContainer\">\n              {players.slice(2).map(p =>\n                <Player className=\"playerContainer\" key={p.id} player={p} />)}\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  currentPlayer: currentPlayer(state),\n  imHost: imHostPlayer(state),\n  localPlayer: localPlayer(state),\n  players: players(state),\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  ...bindActionCreators({\n    connect: Api.getInstance().connect,\n    nextPlayer,\n  }, dispatch),\n});\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GameRoom));","import React from 'react';\n\nimport { Layout } from '../../components';\n\nconst About: React.SFC<any> = () => (\n  <Layout>\n    <h1>About</h1>\n  </Layout>\n);\n\nexport default About;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Index from './pages/Index';\nimport NotFound from './pages/NotFound';\nimport WhatAmI from './pages/WhatAmI';\nimport About from './pages/About';\n\nimport './scss/app.scss';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Index />\n        </Route>\n        <Route exact path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/what-am-i/:namespace\" children={<WhatAmI />} />\n        <Route path=\"*\" children={<NotFound />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from './store';\nimport App from './App';\n\nconst store = createStore();\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\nserviceWorker.unregister();\n","import { applyMiddleware, createStore as reduxCreateStore, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { rootReducer } from './reducer';\nimport { rootSaga } from '../saga';\nimport { PeerConnection } from '../services';\n\nexport function createStore() {\n  const composeEnhancers: Function =\n    window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__' as any] as any ||\n    compose;\n  const sagaMiddleware = createSagaMiddleware();\n  const store = reduxCreateStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(sagaMiddleware)),\n  );\n\n  sagaMiddleware.run(rootSaga);\n  PeerConnection.setDispatch(store.dispatch);\n\n  return store;\n}\n"],"sourceRoot":""}